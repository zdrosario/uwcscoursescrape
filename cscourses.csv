title,id,name,cred,offered,prereq,coreq,antireq,descr
CS115,012765,Introduction to Computer Science 1,0.50,FWS,,,"BME 121, CS 135, 137, 138, 145, CHE 121, CIVE 121, ECE 150, GENE 121/MTE 121, ME 101, NE 111, MSCI 121, PHYS 139, SYDE 121","An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming. Function definition and application. Tracing via substitution. Design, testing, and documentation. Recursive data definitions. Lists and trees. Functional and data abstraction. "
CS116,012766,Introduction to Computer Science 2,0.50,FWS,CS 115 or 135 or 145.,,"CS 136, 137, 138, 146, PHYS 236, 239, MSCI 240, NE 111","This course builds on the techniques and patterns learned in CS 115 while making the transition to use of an imperative language. Generative and structural recursion. Mutation (assignment) and its role in an imperative language. Primitive types and basic I/O. Sequencing, selection, looping. Function definition and use. File and console I/O. Issues in computer science. "
CS135,012040,Designing Functional Programs,0.50,FW,,,"BME 121, CS 115, 137, 138, 145, CIVE 121, ECE 150, ME 101, MSCI 121, PHYS 236, SYDE 121","An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming. Syntax and semantics of a functional programming language. Tracing via substitution. Design, testing, and documentation. Linear and nonlinear data structures. Recursive data definitions. Abstraction and encapsulation. Generative and structural recursion. Historical context. "
CS136,012041,Elementary Algorithm Design and Data Abstraction,0.50,FWS,At least 90% in CS 115 or at least 70% in CS 116 or at least 60% in CS 135 or CS 145.,,"CS 137, 138, 146, PHYS 239","This course builds on the techniques and patterns learned in CS 135 while making the transition to use an imperative language. It introduces the design and analysis of algorithms, the management of information, and the programming mechanisms and methodologies required in implementations. Topics discussed include iterative and recursive sorting algorithms; lists, stacks, queues, trees, and their application; abstract data types and their implementations. "
CS137,012886,Programming Principles,0.50,F,Software Engineering students only,,,Review of fundamental programming concepts and their application. Procedures and parameter passing. Arrays and structures. Recursion. Sorting. Pointers and simple dynamic structures. Space and time analysis of designs. Design methodologies. 
CS138,012887,Introduction to Data Abstraction and Implementation,0.50,W,CS 137,,,"Software abstractions via elementary data structures and their implementation; encapsulation and modularity; class and interface definitions; object instantiation; recursion; elementary abstract data types, including sequences, stacks, queues, and trees; implementation using linked structures and arrays; vectors and strings; memory models; automatic vs. dynamic memory management. "
CS145,012767,Designing Functional Programs (Advanced Level),0.50,F,,,"CS 115, 135, 137, 138",CS 145 is an advanced-level version of CS 135. 
CS146,013657,Elementary Algorithm Design and Data Abstraction (Advanced Level),0.50,W,CS 145 with a grade of at least 75%.,,"CS 116, 136, 137, 138.",CS 146 is an advanced-level version of CS 136. 
CS240,004377,Data Structures and Data Management,0.50,FWS,"(CS 245 or SE 212), (one of CS 241, 246, 247), (one of STAT 206, 230, 240); Computer Science and BMath (Data Science) students only.",,"BME 122, CS 234, ECE 250, MTE 140, SYDE 223","Introduction to widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms. Specific topics include priority queues, sorting, dictionaries, data structures for text processing. "
CS240E,015405,Data Structures and Data Management (Enriched),0.50,,"A grade of 85% or higher in one of CS 136, 138 or 146; Computer Science students only.",,"CS 234, ECE 250",Enriched version of CS 240. 
CS241,004378,Foundations of Sequential Programs,0.50,FWS,(CS 138 or 246) or (a grade of 85% or higher in one of CS 136 or 146); Computer Science and BMath (Data Science) students only.,,"CS 230, ECE 351","The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages. "
CS241E,015406,Foundations of Sequential Programs (Enriched),0.50,,"A grade of 85% or higher in one of CS 136, 138, or 146; Computer Science and BMath (Data Science) students only.",,"CS 230, GENE 344",Enriched version of CS 241. 
CS245,011405,Logic and Computation,0.50,FWS,"(One of CS 136, 138, 146), MATH 135; Honours Mathematics students only.",,"PMATH 330, ECE 208, SE 212","Propositional and predicate logic. Soundness and completeness and their implications. Unprovability of formulae in certain systems. Undecidability of problems in computation, including the halting problem. Reasoning about programs. Correctness proofs for both recursive and iterative program constructions. "
CS245E,015407,Logic and Computation (Enriched),0.50,,A grade of 85% or higher in one of CS 136 or 146; Honours Mathematics students only.,,"ECE 208, PMATH 330, and SE 212",Enriched version of CS 245. 
CS246,004380,Object-Oriented Software Development,0.50,FWS,CS 146 or a grade of 60% or higher in CS 136 or 138; Honours Mathematics students only.,,"CS 247, MSCI 342, SYDE 322","Introduction to object-oriented programming and to tools and techniques for software development. Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites. "
CS246E,015408,Object-Oriented Software Development (Enriched),0.50,,A grade of 85% or higher in one of CS 136 or 146; Honours Mathematics students only.,,SYDE 322,Enriched version of CS 246. 
CS247,013805,Software Engineering Principles,0.50,S,CS 241; Software Engineering students only.,,"CS 246, MSCI 342, SYDE 322","Systematic methods for designing, coding, testing, and documenting medium-sized programs. Major topics include abstraction, modularity, software modeling, object-oriented programming and design, generic programming, testing and debugging. "
CS251,004382,Computer Organization and Design,0.50,FWS,"One of CS 136, 138, 146; Computer Science and BMath (Data Science) students only.",,"BME 292/393, ECE 222, ME 262, MTE 262, SYDE 192",Overview of computer organization and performance. Basics of digital logic design. Combinational and sequential elements. Data representation and manipulation. Basics of processor design. Pipelining. Memory hierarchies. Multiprocessors. 
CS251E,015893,Computer Organization and Design (Enriched),0.50,,A grade of 85% or higher in one of CS 136 or 146; Computer Science and BMath (Data Science) students only.,,"BME 292/393, ECE 222, ME 262, MTE 262, SYDE 192",Enriched version of CS 251. 
CS341,004392,Algorithms,0.50,FWS,CS 240 and (MATH 239 or 249); Computer Science and BMath (Data Science) students only.,,"CS 231, ECE 406","The study of efficient algorithms and effective algorithm design techniques. Program design with emphasis on pragmatic and mathematical aspects of program efficiency. Topics include divide and conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph search and backtrack, problems without algorithms, NP-completeness and its implications. "
CS343,011417,Concurrent and Parallel Programming,0.50,FW,CS 350 or SE 350; Computer Science students only.,,MTE 241,"An introduction to concurrent and parallel programming, with an emphasis on language constructs. Major topics include: exceptions, coroutines, atomic operations, critical sections, mutual exclusion, semaphores, high-level concurrency, deadlock, interprocess communication, process structuring, shared memory and distributed architectures. Students will learn how to structure, implement and debug concurrent programs. "
CS348,004417,Introduction to Database Management,0.50,FWS,Computer Science and BMath (Data Science) students only.,CS 240.,"CS 338, ECE 356, 456, MSCI 346","The main objective of this course is to introduce students to fundamentals of database technology by studying databases from three viewpoints: those of the database user, the database designer, and the database administrator. It teaches the use of a database management system (DBMS) by treating it as a black box, focusing only on its functionality and its interfaces. Topics include introduction to database systems, relational database systems, database design methodology, SQL and interfaces, database application development, concept of transactions, ODBC, JDBC, database tuning, database administration, and current topics (distributed databases, data warehouses, data mining). "
CS349,011727,User Interfaces,0.50,FWS,"CS 241 and (one of MATH 115, 136, 146); Computer Science students only",,,"An introduction to contemporary user interfaces, including the basics of human-computer interaction, the user interface design/evaluation process, the event abstraction, user interface components, specification of user interfaces, and the architectures within which user interfaces are developed. Implementation and evaluation of a typical user interface is considered. "
CS350,011416,Operating Systems,0.50,FWS,"CS 240, 241, 246, (CS 251 or ECE 222); Computer Science students only.",,"ECE 254, MTE 241, SE 350","An introduction to the fundamentals of operating system function, design, and implementation. Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security. "
CS360,004398,Introduction to the Theory of Computing,0.50,FWS,"CS 240, 241 and (MATH 239 or 249); Computer Science students only.",,CS 365,Models of computers including finite automata and Turing machines. Basics of formal languages with applications to the syntax of programming languages. Alternate characterizations of language classes. Proving unrecognizability. Unsolvable problems and their relevance to the semantics of programming. 
CS365,011347,Models of Computation,0.50,W,"CS 240, 241 and (MATH 239 or 249); Computer Science students only.",,CS 360,Finite automata and regular expressions. Pushdown automata and context-free grammars. Turing machines and undecidability. Time and space complexity. Diagonalization and hierarchies. CS 365 covers the material in CS 360 at an accelerated pace plus additional topics in computational complexity. 
CS370,004400,Numerical Computation,0.50,FWS,"(One of MATH 118, 119, 128, 138, 148), (one of MATH 106, 114, 115, 136, 146), (one of CS 231, 234, 241, 246).",,"AMATH 242/CS 371, CHE 121, CIVE 121, CS 335, ECE 204, MTE 204","Principles and practices of basic numerical computation as a key aspect of scientific computation. Visualization of results. Approximation by splines, fast Fourier transforms, solution of linear and nonlinear equations, differential equations, floating point number systems, error, stability. Presented in the context of specific applications to image processing, analysis of data, scientific modeling. "
CS371,011363,Introduction to Computational Mathematics,0.50,WS,"(One of CS 116, 136, 138, 146), MATH 235 or 245, 237 or 247.",,"CS 335, 370, ECE 204, MTE 204","A rigorous introduction to the field of computational mathematics. The focus is on the interplay between continuous models and their solution via discrete processes. Topics include pitfalls in computation, solution of linear systems, interpolation, discrete Fourier transforms, and numerical integration. Applications are used as motivation. "
CS383,015143,Computational Digital Art Studio,0.50,W,"CS 240, FINE 229, 257",,,An upper-level studio course to create computational projects that function as art works and aesthetic experiences. Students will work in interdisciplinary teams to combine computer science principles with fine art technical and conceptual skills. 
CS398,011409,Topics in Computer Science,0.50,,CS 240 and (CS 246 or 247); Computer Science students only,,,See the Course Offerings List for topics available.
CS399,011410,Readings in Computer Science,0.50,,CS 240 and (CS 246 or 247); Computer Science students only,,,Reading course as announced by the department.
CS442,004410,Principles of Programming Languages,0.50,W,CS 240; Computer Science students only,,,"An exposure to important concepts and issues in contemporary programming languages. Data types, abstraction, and polymorphism. Program structure. Lambda calculus and functional programming, logic programming, object-oriented programming. Semantics of programming languages. Critical comparison of language features and programming methodologies using examples drawn from a variety of programming languages including Lisp, Prolog, ML, Ada, Smalltalk, Icon, APL, and Lucid. Programming assignments involve the use of some of these languages. "
CS444,004412,Compiler Construction,0.50,W,CS 350 or SE 350; Computer Science students only,,,"Phases of compilation. Lexical analysis and a review of parsing. Compiler-compilers and translator writing systems. LEX and YACC. Scope rules, block structure, and symbol tables. Runtime stack management. Parameter passage mechanisms. Stack storage organization and templates. Heap storage management. Intermediate code. Code generation. Macros. "
CS445,004413,Software Requirements Specification and Analysis,0.50,FW,CS 350; Computer Science students only.,,SE 463,"Introduces students to the requirements definition phase of software development. Models, notations, and processes for software requirements identification, representation, analysis, and validation. Cost estimation from early documents and specifications. "
CS446,004414,Software Design and Architectures,0.50,WS,CS 350; Computer Science students only.,,"CS 430, SE 464","Introduces students to the design, implementation, and evolution phases of software development. Software design processes, methods, and notation. Implementation of designs. Evolution of designs and implementations. Management of design activities. "
CS447,004416,"Software Testing, Quality Assurance and Maintenance",0.50,W,CS 350; Computer Science students only.,,SE 465,"Introduces students to systematic testing of software systems. Software verification, reviews, metrics, quality assurance, and prediction of software reliability and availability. Related management issues. "
CS448,012300,Database Systems Implementation,0.50,W,CS 348 and (CS 350 or SE 350); Computer Science students only,,,"The objective of this course is to introduce students to fundamentals of building a relational database management system. The course focuses on the database engine core technology by studying topics such as storage management (data layout, disk-based data structures), indexing, query processing algorithms, query optimization, transactional concurrency control, logging and recovery. "
CS449,013910,Human-Computer Interaction,0.50,,"CS 240, 241; Level at least 3B; Computer Science students only.",,SYDE 348/548,"An introduction to the fundamental theories, methods, and research in the design and evaluation of novel computational artifacts designed to meet real-world human needs. "
CS450,004418,Computer Architecture,0.50,W,(CS 245 or SE 212) and (CS 350 or SE 350); Computer Science students only.,,ECE 429,"The course is intended to provide the student with an appreciation of modern computer design and its relation to system architecture, compiler technology and operating system functionality. The course places an emphasis on design based on the measurement of performance and its dependency on parallelism, efficiency, latency and resource utilization. "
CS451,015315,Data-Intensive Distributed Computing,0.50,FW,"CS 341, 348 and (CS 350 or SE 350); Computer Science and BMath (Data Science) students only",,,"Introduces students to infrastructure for data-intensive computing, with a focus on abstractions, frameworks, and algorithms that allow developers to distribute computations across many machines.  Topics include core concepts (partitioning, replication, locality, consistency), computational models (MapReduce, dataflows, stream processing, bulk-synchronous parallel), and applications. "
CS452,004419,Real-time Programming,0.50,WS,CS 350 or SE 350; Computer Science students only,,,"Intended to give students experience with tools and techniques of real-time programming, this course includes not only issues of microcomputer architecture and a real-time programming language and operating system, but also hands-on experience programming a microcomputer for applications such as process control, data acquisition and communication. "
CS454,004420,Distributed Systems,0.50,WS,CS 350 or SE 350; Computer Science students only.,,ECE 454,"An introduction to distributed systems, emphasizing the multiple levels of software in such systems. Specific topics include fundamentals of data communications, network architecture and protocols, local-area networks, concurrency control in distributed systems, recovery in distributed systems, and clock synchronization. "
CS456,010167,Computer Networks,0.50,FWS,CS 350; Computer Science students only.,,"CS 436, ECE 358, 428","An introduction to network architectures and protocols, placing emphasis on protocols used in the Internet. Specific topics include application layer protocols, network programming, transport protocols, routing, multicast, data link layer issues, multimedia networking, network security, and network management. "
CS457,004422,System Performance Evaluation,0.50,,"(CS 246 or 247) and (one of STAT 206, 231, 241); Computer Science students only",,,"Basic techniques of system performance evaluation. Specific topics include: performance modeling, discrete event simulation, verification and validation of simulation models, analysis of simulation output, analysis of single server queue and queueing networks, modeling of computer systems, networks, and other queueing or non-queueing systems. "
CS458,012980,Computer Security and Privacy,0.50,FWS,CS 350 or SE 350. Computer Science students only.,,ECE 458,"Security and privacy issues in various aspects of computing. Specific topics include: comparing security and privacy, program security, writing secure programs, controls against program threats, operating system security, formal security models, network security, Internet application security and privacy, privacy-enhancing technologies, database security and privacy, inference, data mining, security policies, physical security, economics of security, and legal and ethical issues. "
CS462,004424,Formal Languages and Parsing,0.50,,CS 360 or 365; Computer Science students only,,,"Languages and their representations. Grammars --Chomsky hierarchy. Regular sets and sequential machines. Context-free grammars -- normal forms, basic properties. Pushdown automata and transducers. Operations on languages. Undecidable problems in language theory. Applications to the design of programming languages and compiler construction."
CS466,004426,Algorithm Design and Analysis,0.50,FS,CS 341; Computer Science students only,,,"Algorithmic approaches and methods of assessment that reflect a broad spectrum of criteria, including randomized algorithms, amortized analysis, lower bounds, approximation algorithms, and on-line algorithms. Particular examples will be chosen from different areas of active research and application. "
CS467,011497,Introduction to Quantum Information Processing,0.50,W,"One of MATH 114, 115, 235, 245; Level at least 4A",,,Basics of computational complexity; basics of quantum information; quantum phenomena; quantum circuits and universality; relationship between quantum and classical complexity classes; simple quantum algorithms; quantum Fourier transform; Shor factoring algorithm; Grover search algorithm; physical realization of quantum computation; error-correction and fault-tolerance; quantum key distribution. 
CS475,011444,Computational Linear Algebra,0.50,S,AMATH 242/CS 371 or CS 370.,,"CS 372, 472","Basic concepts and implementation of numerical linear algebra techniques and their use in solving application problems. Special methods for solving linear systems having special features. Direct methods: symmetric, positive definite, band, general sparse structures, ordering methods.
Iterative methods: Jacobi, Gauss-Seidel, SOR, conjugate gradient. Computing and using orthogonal factorizations of matrices. QR and SVD methods for solving least squares problems. Eigenvalue and singular value decompositions. Computation and uses of these decompositions in practice. "
CS476,003352,Numeric Computation for Financial Modeling,0.50,W,(AMATH 242/CS 371 or CS 370) and STAT 231/241,,,"The interaction of financial models, numerical methods, and computing environments. Basic computational aspects of option pricing and hedging. Numerical methods for stochastic differential equations, strong and weak convergence. Generating correlated random numbers. Time-stepping methods. Finite difference methods for the Black-Scholes equation. Discretization, stability, convergence. Methods for portfolio optimization, effect of data errors on portfolio weights. "
CS480,015515,Introduction to Machine Learning,0.50,FWS,CS 341 and (STAT 206 or 231 or 241); Computer Science and BMath (Data Science) students only.,,,"Introduction to modeling and algorithmic techniques for machines to learn concepts from data. Generalization: underfitting, overfitting, cross-validation. Tasks: classification, regression, clustering. Optimization-based learning: loss minimization. regularization. Statistical learning: maximum likelihood, Bayesian learning. Algorithms: nearest neighbour, (generalized) linear regression, mixtures of Gaussians, Gaussian processes, kernel methods, support vector machines, deep learning, sequence learning, ensemble techniques. Large scale learning: distributed learning and stream learning. Applications: Natural language processing, computer vision, data mining, human computer interaction, information retrieval. "
CS482,004434,Computational Techniques in Biological Sequence Analysis,0.50,W,"CS 341, STAT 241 or at least 60% in STAT 231",,,"Computer science principles and algorithms in biological sequence analysis. Topics include algorithms for sequence comparison, for large-scale database search in biological databases, for sequence assembly, for evolutionary tree reconstruction, for identifying important features in DNA and RNA sequences, and underlying computational techniques for understanding strings and trees and for making probabilistic inferences. "
CS484,013912,Computational Vision,0.50,,(AMATH 242/CS 371 or CS 370) and STAT 230 or 240; Computer Science students only,,,"Introduction to image and vision understanding by computer. Camera-system geometry, image formation and lighting, and image acquisition. Basic visual processes for recognition of edges, regions, lines, and surfaces. Processing of stereo images, and motion in image sequences. Object recognition. Applications of computer-vision systems. "
CS485,013911,Statistical and Computational Foundations of Machine Learning,0.50,,CS 341 and (STAT 206 or 230 or 240); Computer Science and BMath (Data Science) students only,,,"Extracting meaningful patterns from random samples of large data sets. Statistical analysis of the resulting problems. Common algorithmic paradigms for such tasks. Central concepts: VC-dimension, margins of a classifier, sparsity and description length, other types of regularization. Performance guarantees: generalization bounds, data dependent error bounds and computational complexity of learning algorithms. Common paradigms: neural networks, kernel methods and support-vector machines, boosting, nearest neighbor classifiers. Applications to data mining."
CS486,004435,Introduction to Artificial Intelligence,0.50,FWS,CS 341; Computer Science and BMath (Data Science) students only.,STAT 206 or 231 or 241.,,Goals and methods of artificial intelligence. Methods of general problem solving. Knowledge representation and reasoning. Planning. Reasoning about uncertainty. Machine learning. Multi-agent systems. Natural language processing. 
CS487,004436,Introduction to Symbolic Computation,0.50,W,CS 231 or 234 or 240; Honours Mathematics only,,,"An introduction to the use of computers for symbolic mathematical computation, involving traditional mathematical computations such as solving linear equations (exactly), analytic differentiation and integration of functions, and analytic solution of differential equations. "
CS488,004437,Introduction to Computer Graphics,0.50,FWS,CS 341 and (CS 350 or SE 350) and (CS 370 or 371); Computer Science students only,,,"Software and hardware for interactive computer graphics. Implementation of device drivers, 3-D transformations, clipping, perspective, and input routines. Data structures, hidden surface removal, colour shading techniques, and some additional topics will be covered. "
CS489,010044,Advanced Topics in Computer Science,0.50,,Level at least 3B; Computer Science students only,,,See the Course Offerings List for topics available.
CS490,004433,Information Systems Management,0.50,WS,CS 350 or SE 350; Computer Science students only.,,"BUS
415W, 486W","The integration of business and technical considerations in the design, implementation and management of information systems. Topics include: IS planning and development; business, management, executive, and strategic information systems, including case studies of selected large- scale systems; decision support systems; end-user training and development; systems security, disaster planning and recovery. Practical examples of information systems in industry. "
CS492,004438,The Social Implications of Computing,0.50,WS,CS 240; Computer Science students only,,,"This course is designed to consider the problems encountered by individuals, organizations and society as computer technology is adopted, with a view towards assessing possible courses of action. "
CS493,015545,Team Project 1,0.50,F,"CS 341, 350; Computer Science students only. Not open to Software Engineering students.",,,"Students work in teams on substantial open-ended computer science problems as part of the CS 493/494 course sequence. Lectures describe project management fundamentals and ethical and legal issues in computing. Students form teams, select projects, define project goals, perform risk assessment, establish a project plan, and develop a prototype. Possible project topics can include development of software systems, analysis of extensions to existing systems across the field, and experimental computer science."
CS494,015546,Team Project 2,0.50,W,CS 493; Computer Science students only. Not open to Software Engineering students.,,,"Continuing from CS 493, student teams continue development of their project, update project plans, explore design alternatives, perform testing, and analyze experimental results. Teams prepare and deliver technical presentations and demonstrations of their projects, and analyze ethical and legal aspects of their work. "
CS497,012280,Multidisciplinary Studies in Computer Science,0.50,,Level at least 3B; Computer Science students only,,,See the Course Offerings list for topics available.
CS499R,004444,Readings in Computer Science,0.50,,Level at least 3B; Computer Science students only,,,Reading course as announced by the department.
CS499T,012560,Honours Thesis,0.50,S,Computer Science students only,,,"The student will undertake new analysis, synthesis, measurement, or experimentation to produce a document that demonstrates a depth of understanding of a topic that goes beyond what is obtained in a standard undergraduate education. "
